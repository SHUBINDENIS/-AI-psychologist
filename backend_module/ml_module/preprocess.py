import pandas as pd
from sklearn.preprocessing import MinMaxScaler
import joblib


def preprocess_data(df, scaler=None):
    print("üöÄ –ó–∞–ø—É—â–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è preprocess_data")
    """
    –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö: —É–¥–∞–ª–µ–Ω–∏–µ —Ü–µ–ª–µ–≤—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è.

    :param df: DataFrame —Å –≤—Ö–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    :param scaler: –û–±—É—á–µ–Ω–Ω—ã–π MinMaxScaler (–µ—Å–ª–∏ None, —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π)
    :return: –ö–æ—Ä—Ç–µ–∂ (–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, scaler)
    """
    # –£–¥–∞–ª—è–µ–º —Ü–µ–ª–µ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã (–µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å)
    target_columns = [f'real_class_{i + 1}' for i in range(14)]
    df_clean = df.drop(columns=[col for col in target_columns if col in df.columns], errors='ignore')

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫ —á–∏—Å–ª–æ–≤–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É, –µ—Å–ª–∏ –Ω–∞–¥–æ (–º–∞–ª–æ –ª–∏)
    df_clean = df_clean.apply(pd.to_numeric, errors='coerce').fillna(0)

    # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    X = scaler.transform(df_clean)

    print("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è preprocess_data")
    return X, scaler
